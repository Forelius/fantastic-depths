# EXAMPLE:
# git tag 0.7.12
# git push origin stable
# git push origin 0.7.12
# .github/workflows/stable-release.yml
name: Build and Release Fantastic Depths (Stable Release)

on:
  push:
    tags:
      - "[0-9]+\\.[0-9]+\\.[0-9]+"  # Trigger on version tags

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Extract version from the Git tag
      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      # Check if the tag is on the stable branch
      - name: Check if tag is on stable branch
        id: check_branch
        run: |
          TAG_COMMIT=$(git rev-list -n 1 ${{ env.VERSION }})
          if git merge-base --is-ancestor stable $TAG_COMMIT; then
            echo "The tag is on the stable branch."
            echo "is_valid=true" >> $GITHUB_ENV
          else
            echo "This tag is not on the stable branch. Skipping release."
            echo "is_valid=false" >> $GITHUB_ENV
          fi

      # Create the release zip only if the tag is valid
      - name: Prepare release zip
        if: env.is_valid == 'true'  # Only run if the tag is valid
        run: |
          zip -r fantastic-depths.zip ./* \
          -x ".git*" \
          -x ".github/*" \
          -x "node_modules/*" \
          -x ".vs/*" \
          -x "src/*" \
          -x "package.json" \
          -x "package-lock.json"

      # Create a new GitHub release and attach the zip file
      - name: Create GitHub release
        if: env.is_valid == 'true'  # Only run if the tag is valid
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VERSION }}
          name: "Release ${{ env.VERSION }} (STABLE)"  # Name the release without "Pre-Release"
          prerelease: false  # Mark as a stable release
          artifacts: fantastic-depths.zip
          token: ${{ secrets.GITHUB_TOKEN }}

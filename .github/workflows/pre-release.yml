# EXAMPLE:
# git tag 0.7.12
# git push origin main
# git push origin 0.7.12
# .github/workflows/pre-release.yml
name: Build and Release Fantastic Depths (Pre-Release)

on:
  push:
    tags:
      - "[0-9]+\\.[0-9]+\\.[0-9]+"  # Trigger on version tags

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Extract version from the Git tag
      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      # Check which branch the tag is associated with
      - name: Get branch for the tag
        id: get_branch
        run: |
          TAG_COMMIT=$(git rev-list -n 1 ${{ env.VERSION }})
          BRANCH_NAME=$(git branch --contains $TAG_COMMIT | grep -v 'HEAD' | sed 's/^[ *]*//;s/ .*//')
          echo "The tag is associated with the following branch: $BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      # Check if the tag is on the main branch
      - name: Check if tag is on main branch
        id: check_branch
        run: |
          TAG_COMMIT=$(git rev-list -n 1 ${{ env.VERSION }})
          if git merge-base --is-ancestor main $TAG_COMMIT; then
            echo "The tag is on the main branch."
            echo "is_valid=true" >> $GITHUB_ENV
          else
            echo "This tag is not on the main branch. Skipping release."
            echo "is_valid=false" >> $GITHUB_ENV
          fi

      # Create the release zip only if the tag is valid
      - name: Prepare release zip
        if: env.is_valid == 'true'  # Only run if the tag is valid
        run: |
          zip -r fantastic-depths.zip ./* \
          -x ".git*" \
          -x ".github/*" \
          -x "node_modules/*" \
          -x ".vs/*" \
          -x "src/*" \
          -x "package.json" \
          -x "package-lock.json"

      # Create a new GitHub pre-release and attach the zip file
      - name: Create GitHub pre-release
        if: env.is_valid == 'true'  # Only run if the tag is valid
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VERSION }}
          name: "Pre-Release ${{ env.VERSION }}"
          prerelease: true
          artifacts: fantastic-depths.zip
          token: ${{ secrets.GITHUB_TOKEN }}
